select * from dbo.dim_campaigns
select * from dbo.dim_products
select * from dbo.dim_stores
select * from dbo.fact_events


----Joining all the tables by join query 

select *
from fact_events e
left join dim_campaigns c
on e.campaign_id = c.campaign_id
left join dim_products p 
on e.product_code  = p.product_code 
left join dim_stores s
on e.store_id = s.store_id

----Answering Business questions provided by the client

--1. provide a list of products with a base price greater than 500 and that are featured in promo type 'BOGOF'
--Buy one get one free.

select distinct p.product_name
from fact_events e
left join dim_campaigns c
on e.campaign_id = c.campaign_id
left join dim_products p 
on e.product_code  = p.product_code 
left join dim_stores s
on e.store_id = s.store_id
where e.base_price > 500 and e.promo_type = 'BOGOF'

---2.Total number of stores in each city


select city,count(store_id)as  TotalStores
from dbo.dim_stores
group by city
order by count(store_id) desc

---3.Total revenue generated by each campaign before and after the oromotion 

select c.campaign_name, sum(e.base_price * e.quantity_sold_before_promo)/1000000
as Revenue_Generated_Before_Promotion_in_MILLIONS,
sum(e.base_price * e.quantity_sold_after_promo)/1000000
as Revenue_Generated_After_Promotion_in_MILLIONS
from fact_events e
left join dim_campaigns c
on e.campaign_id = c.campaign_id
group by c.campaign_name

--4.Incremental sold quantity percentage (ISU %) for each category during the diwali campaign and their rankings

SELECT
    p.category,
    (SUM(e.quantity_sold_after_promo) - SUM(e.quantity_sold_before_promo)) / SUM(e.quantity_sold_before_promo) * 100 AS total_ISU_percentage,
    RANK() OVER (ORDER BY (SUM(e.quantity_sold_after_promo) - SUM(e.quantity_sold_before_promo)) / SUM(e.quantity_sold_before_promo) * 100 DESC) AS rank_order
FROM
    dim_products p
left JOIN
    fact_events e ON p.product_code = e.product_code
left JOIN
    dim_campaigns c ON e.campaign_id = c.campaign_id
WHERE
   c.campaign_name = 'Diwali'
GROUP BY
    p.category;

------5.Incremental sold quantity percentage (ISU %) for each category during the Sankranti campaign and their rankings

SELECT
    p.category,
    (SUM(e.quantity_sold_after_promo) - SUM(e.quantity_sold_before_promo)) / SUM(e.quantity_sold_before_promo) * 100 AS total_ISU_percentage,
    RANK() OVER (ORDER BY (SUM(e.quantity_sold_after_promo) - SUM(e.quantity_sold_before_promo)) / SUM(e.quantity_sold_before_promo) * 100 DESC) AS rank_order
FROM
    dim_products p
left JOIN
    fact_events e ON p.product_code = e.product_code
left JOIN
    dim_campaigns c ON e.campaign_id = c.campaign_id
WHERE
   c.campaign_name = 'Sankranti'
GROUP BY
    p.category;


------6.Top 5 products with high IR% across all categories and campaigns

SELECT
   Top 5  p.product_name,
    p.category,
    SUM((e.quantity_sold_after_promo * e.base_price) - (e.quantity_sold_before_promo * e.base_price)) / SUM(e.quantity_sold_before_promo * e.base_price) * 100 AS IR_percentage
FROM
    dim_products p
JOIN
    fact_events e ON p.product_code = e.product_code
GROUP BY
    p.product_name, p.category
ORDER BY
    IR_percentage DESC
